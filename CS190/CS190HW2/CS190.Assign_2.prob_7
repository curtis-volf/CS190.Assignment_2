// See https://aka.ms/new-console-template for more information


using System;
using System.Data;
using Npgsql;


class Problems
{
    static void Main(string[] args)
    {
        // Connect to a PostgreSQL database
        NpgsqlConnection conn = new NpgsqlConnection("Server=127.0.0.1:5432;User Id=postgres; " +
           "Password=#Tigger96!;Database=prods;");
        conn.Open();

        // Define a query returning a single row result set
        NpgsqlCommand command = new NpgsqlCommand("SELECT * FROM product", conn);
      
        // Execute the query and obtain the value of the first column of the first row
        //Int64 count = (Int64)command.ExecuteScalar();
        NpgsqlDataReader reader = command.ExecuteReader();

        DataTable dt = new DataTable();
        dt.Load(reader);

        // Define a query returning a single row result set
        NpgsqlCommand command1 = new NpgsqlCommand("SELECT * FROM customer", conn);

        // Execute the query and obtain the value of the first column of the first row
        //Int64 count = (Int64)command.ExecuteScalar();
        NpgsqlDataReader reader1 = command1.ExecuteReader();

        question_7(dt);

        conn.Close();
    }
    static void question_7(DataTable data)
    {
        Console.WriteLine();
        Dictionary<string, int> colWidths = new Dictionary<string, int>();
        

        foreach (DataColumn col in data.Columns)
        {
            

            if (col.ColumnName == "prod_id" || col.ColumnName == "prod_desc" || col.ColumnName == "prod_quantity")
            {
                Console.Write(col.ColumnName);
                var maxLabelSize = data.Rows.OfType<DataRow>()
                    .Select(m => (m.Field<object>(col.ColumnName)?.ToString() ?? "").Length)
                    .OrderByDescending(m => m).FirstOrDefault();

                colWidths.Add(col.ColumnName, maxLabelSize);
                for (int i = 0; i < maxLabelSize - col.ColumnName.Length + 14; i++) Console.Write(" ");


            }
        }

        Console.WriteLine();

        foreach (DataRow dataRow in data.Rows)
        {
            
           
            int myint = Convert.ToInt32(dataRow.ItemArray[2]);

            if (12 <= myint && myint <= 30)
            {
                for (int j = 0; j < dataRow.ItemArray.Length - 3; j++)
                {
                    
                            Console.Write(dataRow.ItemArray[j]);
                            for (int i = 0; i < colWidths[data.Columns[j].ColumnName] - dataRow.ItemArray[j].ToString().Length + 14; i++)
                                Console.Write(" ");
                        

                }
                Console.WriteLine();
            }
            
        }
        
    }
    
}